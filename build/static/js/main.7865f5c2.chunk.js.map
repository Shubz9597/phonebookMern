{"version":3,"sources":["components/personDetails.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Person","props","onSubmit","value","valueName","onChange","setValueName","valueNum","setValueNum","type","Search","Persons","contact","delContact","name","number","onClick","Filter","valueSearch","setValueSearch","baseURL","axios","get","then","response","data","newObj","post","console","log","id","delete","put","Notification","message","msgClass","className","App","useState","persons","setPersons","newName","setNewName","newNum","setNewNum","searchName","setSearchName","msg","setMsg","mClass","setMClass","useEffect","personService","initialContacts","searchedContacts","filter","person","toLowerCase","includes","e","target","preventDefault","find","window","confirm","p","changedNumber","returnedPerson","map","catch","setTimeout","changeContact","returnedContacts","concat","error","deleteContact","ReactDOM","render","document","getElementById"],"mappings":"sLAGMA,EAAS,SAACC,GACZ,OACI,uBAAMC,SAAYD,EAAMC,SAAxB,UACI,yCACU,cAAC,EAAD,CAAQC,MAASF,EAAMG,UAAWC,SAAYJ,EAAMK,eAD9D,WAEY,cAAC,EAAD,CAAQH,MAASF,EAAMM,SAAUF,SAAYJ,EAAMO,iBAE/D,uBACA,8BACI,wBAAQC,KAAK,SAAb,uBAMVC,EAAS,SAAC,GAAuB,IAAtBP,EAAqB,EAArBA,MAAOE,EAAc,EAAdA,SACpB,OACI,uBAAOF,MAASA,EAAOE,SAAYA,KAIrCM,EAAU,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,WACvB,OACI,gCACI,+BAAOD,EAAQE,OADnB,IACiC,OAAU,OAAU,OACjD,+BAAOF,EAAQG,SACf,wBAAQC,QAAWH,EAAnB,wBAKNI,EAAS,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,eAC1B,OACI,uDACwB,cAAC,EAAD,CAAQhB,MAASe,EAAab,SAAYc,Q,gBCnCpEC,EAAU,eAyBD,EAvBC,WAEZ,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAqB9B,EAlBA,SAACC,GAEZ,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAEhB,OADAI,QAAQC,IAAIL,EAASC,MACdD,EAASC,SAcT,EAVI,SAACK,GAEhB,OADgBT,IAAMU,OAAN,UAAgBX,EAAhB,YAA2BU,IAC5BP,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALG,SAACK,EAAIJ,GAEnB,OADgBL,IAAMW,IAAN,UAAaZ,EAAb,YAAwBU,GAAMJ,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCP9BQ,EAfM,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,SAC5B,OAAe,OAAZD,EACQ,KAIP,qBAAKE,UAAaD,EAAlB,SACKD,KCsIEG,EAzIH,WACV,MAAgCC,mBAAS,IAAzC,mBAAQC,EAAR,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAQG,EAAR,KAAiBC,EAAjB,KACA,EAA6BJ,mBAAS,IAAtC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAoCN,mBAAS,IAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KACA,EAAsBR,mBAAS,MAA/B,mBAAOS,EAAP,KAAYC,EAAZ,KACA,EAA4BV,mBAAS,IAArC,mBAAOW,EAAP,KAAeC,EAAf,KAGAC,qBAAW,WACTC,IAEG7B,MAAK,SAAA8B,GACJb,EAAWa,QAEd,IAGH,IA2BMC,EAAmBT,EAAaN,EAAQgB,QAAO,SAAAC,GAAM,OAAIA,EAAO1C,KAAK2C,cAAcC,SAASb,EAAWY,kBAAkBlB,EAmE/H,OACE,gCACE,2CACA,cAAC,EAAD,CAAcL,QAAWa,EAAKZ,SAAYc,IAC1C,uBACA,cAAC,EAAD,CAAQ/B,YAAe2B,EAAY1B,eAAkB,SAAAwC,GAAC,OAAIb,EAAca,EAAEC,OAAOzD,UACjF,uBACA,2CACA,cAAC,EAAD,CAAQD,SAzEO,SAACyD,GAElB,GADAA,EAAEE,iBACCtB,EAAQuB,MAAK,SAAAN,GAAM,OAAKA,EAAO1C,KAAK2C,gBAAkBhB,EAAQgB,kBAA4C,KAAXd,EAEhG,OAAGoB,OAAOC,QAAP,UAAkBvB,EAAlB,2EAjCe,WACpB,IAAM7B,EAAU2B,EAAQuB,MAAK,SAAAG,GAAC,OAAIA,EAAEnD,OAAS2B,KACvCyB,EAAa,2BAAOtD,GAAP,IAAgBG,OAAQ4B,IAE3CS,EACac,EAAcpC,GAAIoC,GAC5B3C,MAAK,SAAA4C,GACJ3B,EAAWD,EAAQ6B,KAAI,SAAAZ,GAAM,OAAIA,EAAO1C,OAAS2B,EAAU0B,EAAiBX,MAC5Ed,EAAW,IACXE,EAAU,OACTyB,OAAM,SAAAV,GACP/B,QAAQC,IAAI,gBAAiB8B,GAC7BX,EAAO,kBAAD,OAAmBkB,EAAcpD,KAAjC,+CACNoC,EAAU,SAEVoB,YAAW,WACTtB,EAAO,MACPE,EAAU,MACVV,EAAWD,EAAQgB,QAAO,SAAAU,GAAC,OAAIA,EAAEnD,OAASF,EAAQE,SAClD4B,EAAW,IACXE,EAAU,MACT,QAcI2B,IAGF3B,EAAU,IAAKF,EAAW,KAQjCU,EALe,CACbtC,KAAM2B,EACN1B,OAAQ4B,IAKPpB,MAAK,SAAAiD,GACJhC,EAAWD,EAAQkC,OAAOD,IAC1B9B,EAAW,IACXE,EAAU,IACVE,EAAc,IACdE,EAAO,SAAD,OAAUwB,EAAiB1D,OACjCoC,EAAU,WACVoB,YAAW,WACTtB,EAAO,MACPE,EAAU,QACT,QAEJmB,OAAM,SAAAK,GACL9C,QAAQC,IAAI6C,EAAMlD,SAASC,KAAKiD,OAChC1B,EAAO0B,EAAMlD,SAASC,KAAKiD,OAC3BxB,EAAU,SAEVoB,YAAW,WACTtB,EAAO,MACPE,EAAU,MACVR,EAAW,IACXE,EAAU,MACT,SAiCLxC,UAAaqC,EAASnC,aAAgB,SAAAqD,GAAC,OAAIjB,EAAWiB,EAAEC,OAAOzD,QAC/DI,SAAYoC,EAAQnC,YAAe,SAAAmD,GAAC,OAAIf,EAAUe,EAAEC,OAAOzD,UAE7D,yCACCmD,EAAiBc,KAAK,SAAAxD,GAAO,OAC5B,cAAC,EAAD,CACEA,QAAWA,EAEXC,WAAc,kBArCA,SAACD,GAClBmD,OAAOC,QAAP,iBAAyBpD,EAAQE,KAAjC,OACDsC,EACcxC,EAAQkB,IACnBP,MAAK,SAAAC,GACJgB,EAAWD,EAAQgB,QAAO,SAAAU,GAAC,OAAIA,EAAEnC,KAAOlB,EAAQkB,UAC/CuC,OAAM,SAAAV,GACP/B,QAAQC,IAAI8B,GACZX,EAAO,kBAAD,OAAmBpC,EAAQE,KAA3B,+CACNoC,EAAU,SAEVoB,YAAW,WACTtB,EAAO,MACPE,EAAU,QACT,QAuBiByB,CAAc/D,KAD3BA,EAAQkB,W,MCjIzB8C,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.7865f5c2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst Person = (props) => {\r\n    return(\r\n        <form onSubmit = {props.onSubmit}>\r\n            <div>\r\n                Name: <Search value = {props.valueName} onChange = {props.setValueName} />\r\n                Number: <Search value = {props.valueNum} onChange = {props.setValueNum} />\r\n            </div>\r\n            <br />\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst Search = ({value, onChange}) => {\r\n    return (\r\n        <input value = {value} onChange = {onChange} />\r\n    )\r\n}\r\n\r\nconst Persons = ({contact, delContact}) => {\r\n    return (\r\n        <div>            \r\n            <span>{contact.name}</span> {'\\u00A0'}{'\\u00A0'}{'\\u00A0'}\r\n            <span>{contact.number}</span>\r\n            <button onClick = {delContact}>Delete</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Filter = ({valueSearch, setValueSearch}) => {\r\n    return(\r\n        <div>\r\n            Search the Contact: <Search value = {valueSearch} onChange = {setValueSearch} /> \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport {\r\n    Person, \r\n    Search, \r\n    Persons,\r\n    Filter\r\n}","import axios from 'axios'\r\n\r\nconst baseURL = '/api/persons'\r\n\r\nconst getData = () => {\r\n    const request = axios.get(baseURL)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newObj) => {\r\n    const request = axios.post(baseURL, newObj)\r\n    return request.then(response => {\r\n        console.log(response.data)\r\n        return response.data\r\n    })\r\n}\r\n\r\nconst deletePost = (id) => {\r\n    const request = axios.delete(`${baseURL}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst updateCon = (id, newObj) => {\r\n    const request = axios.put(`${baseURL}/${id}`, newObj)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n    getData, create, deletePost, updateCon\r\n}","import React from 'react'\r\n\r\nconst Notification = ({message, msgClass}) => {\r\n    if(message === null){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className = {msgClass}>\r\n            {message}\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\n\r\n\r\nexport default Notification","import React, { useEffect, useState } from 'react'\nimport {Person, Persons, Filter} from './components/personDetails'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [newNum, setNewNum ] = useState('')\n  const [searchName, setSearchName] = useState('')\n  const [msg, setMsg] = useState(null)\n  const [mClass, setMClass] = useState('')\n\n\n  useEffect( () => {\n    personService\n      .getData()\n      .then(initialContacts => {\n        setPersons(initialContacts)\n      })\n  }, [])\n\n\n  const changeContact = () => {\n    const contact = persons.find(p => p.name === newName)\n    const changedNumber = {...contact, number: newNum}\n\n    personService\n      .updateCon(changedNumber.id, changedNumber)\n      .then(returnedPerson => {\n        setPersons(persons.map(person => person.name === newName ? returnedPerson : person))\n        setNewName('')\n        setNewNum('')\n      }).catch(e => {\n        console.log('Error Message', e)\n        setMsg(`Information of ${changedNumber.name} has already been removed from the Server.`)\n        setMClass('error')\n\n        setTimeout(() => {\n          setMsg(null)\n          setMClass(null)\n          setPersons(persons.filter(p => p.name !== contact.name))\n          setNewName('')\n          setNewNum('')\n        }, 2000)\n      })\n  }\n    \n  \n\n  const searchedContacts = searchName ? persons.filter(person => person.name.toLowerCase().includes(searchName.toLowerCase())) : persons\n  \n  const addContact = (e) => {\n    e.preventDefault()\n    if(persons.find(person => (person.name.toLowerCase() === newName.toLowerCase()) ? true: false) && newNum !== '')\n    {\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`))\n      {\n        return changeContact()\n      }\n\n      return(setNewNum(''), setNewName(''))\n    }\n    \n      const newObj = {\n        name: newName,\n        number: newNum\n      }\n  \n      personService\n        .create(newObj)\n        .then(returnedContacts => {\n          setPersons(persons.concat(returnedContacts))\n          setNewName('')\n          setNewNum('')\n          setSearchName('')\n          setMsg(`Added ${returnedContacts.name}`)\n          setMClass('success')\n          setTimeout(() => {\n            setMsg(null)\n            setMClass(null)\n          }, 5000)\n        })\n        .catch(error => {\n          console.log(error.response.data.error)\n          setMsg(error.response.data.error)\n          setMClass('error')\n\n          setTimeout(() => {\n            setMsg(null)\n            setMClass(null)\n            setNewName('')\n            setNewNum('')\n          }, 2000)\n        })\n  }\n  \n  const deleteContact = (contact) => {\n    if(window.confirm(`Delete ${contact.name} `)){\n      personService\n        .deletePost(contact.id)\n        .then(response => {\n          setPersons(persons.filter(p => p.id !== contact.id))\n        }).catch(e => {\n          console.log(e)\n          setMsg(`Information of ${contact.name} has already been removed from the Server.`)\n          setMClass('error')\n\n          setTimeout(() => {\n            setMsg(null)\n            setMClass(null)\n          }, 5000)\n        })\n        \n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message = {msg} msgClass = {mClass} />\n      <br />\n      <Filter valueSearch = {searchName} setValueSearch = {e => setSearchName(e.target.value)}/>\n      <br />\n      <h3>Add a new</h3>\n      <Person onSubmit = {addContact}\n        valueName = {newName} setValueName = {e => setNewName(e.target.value)}\n        valueNum = {newNum} setValueNum = {e => setNewNum(e.target.value)}\n      />\n      <h3>Numbers</h3>\n      {searchedContacts.map( contact => \n        <Persons \n          contact = {contact}\n          key = {contact.id}\n          delContact = {() => deleteContact(contact)}\n        />\n      )}\n      \n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App';\nimport './index.css'\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}